<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.search">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.search" id="dirtyFileSearchParticipant" name="Dirty File Search Participant"/>
      </appInfo>
      <documentation>
         The extension point allows to register a text search participant that is used to locate dirty files in the workspace.
         This participant will only be used when the default search engine is in use. 
         This is an internal extension point and is not intended to be implemented by clients.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="dirtyFileSearchParticipant" minOccurs="1" maxOccurs="1"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dirtyFileSearchParticipant">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing org.eclipse.search.core.text.IDirtyFileSearchParticipant
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.search.core.text.IDirtyFileSearchParticipant"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.2
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         As an example, here is the markup for suppling a search engine

&lt;p&gt;
&lt;pre&gt;
&lt;extension id=&quot;MyParticipant&quot;
      point=&quot;org.eclipse.search.textSearchEngine&quot;&gt;
   &lt;textSearchEngine
         class=&quot;org.eclipse.search.DirtyFileSearchParticipant&quot; /&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The contributed class must implement &lt;code&gt;org.eclipse.search.core.text.IDirtyFileSearchParticipant&lt;/code&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2023 Red Hat Inc and Others

 This program and the accompanying materials 
 are made available under the terms of the Eclipse Public License 2.0 
 which accompanies this distribution, and is available at &lt;a href=&quot;https://www.eclipse.org/legal/epl-2.0&quot;&gt;https://www.eclipse.org/legal/epl-v20.html&lt;/a&gt;/

SPDX-License-Identifier: EPL-2.0
      </documentation>
   </annotation>

</schema>
